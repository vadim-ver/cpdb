#Использовать 1commands

Перем Сервер Экспорт;
Перем Пользователь Экспорт;
Перем Пароль Экспорт;

Процедура Инициализировать(Знач _Сервер, Знач _Пользователь, Знач _Пароль) Экспорт

	Сервер			= _Сервер;
	Пользователь	= _Пользователь;
	Пароль			= _Пароль;
	
КонецПроцедуры //Инициализировать()

Функция БазаСуществует(База) Экспорт
	ТекстЗапроса = """SET NOCOUNT ON; SELECT COUNT(name) from sysdatabases where name = '" + База + "'; SET NOCOUNT OFF""";
	
	КомандаРК = Новый Команда;
	
	КомандаРК.УстановитьКоманду("sqlcmd");
	КомандаРК.ДобавитьПараметр("-S " + Сервер);
	КомандаРК.ДобавитьПараметр("-U " + Пользователь);
	КомандаРК.ДобавитьПараметр("-P " + Пароль);
	КомандаРК.ДобавитьПараметр("-Q " + ТекстЗапроса);
	КомандаРК.ДобавитьПараметр("-b");

	КомандаРК.УстановитьИсполнениеЧерезКомандыСистемы( Ложь );
	КомандаРК.ПоказыватьВыводНемедленно( Ложь );
	
	КодВозврата = КомандаРК.Исполнить();

	Если КодВозврата = 0 Тогда
		РезультатЗапроса = СокрЛП(СтрЗаменить(КомандаРК.ПолучитьВывод(), "-", ""));
		Возврат РезультатЗапроса = "1";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции //БазаСуществует()

Функция СоздатьБазу(База, ОписаниеРезультата = "") Экспорт

	Если БазаСуществует(База) Тогда
		ОписаниеРезультата = "База """ + База + """ уже существует!";
		Возврат Ложь;
	КонецЕсли;

	ТекстЗапроса = """USE [master]; CREATE DATABASE " + База + "; ALTER DATABASE " + База + " SET RECOVERY SIMPLE""";
	
	КомандаРК = Новый Команда;
	
	КомандаРК.УстановитьКоманду("sqlcmd");
	КомандаРК.ДобавитьПараметр("-S " + Сервер);
	КомандаРК.ДобавитьПараметр("-U " + Пользователь);
	КомандаРК.ДобавитьПараметр("-P " + Пароль);
	КомандаРК.ДобавитьПараметр("-Q " + ТекстЗапроса);
	КомандаРК.ДобавитьПараметр("-b");

	КомандаРК.УстановитьИсполнениеЧерезКомандыСистемы( Ложь );
	КомандаРК.ПоказыватьВыводНемедленно( Ложь );
	
	КодВозврата = КомандаРК.Исполнить();

	ОписаниеРезультата = КомандаРК.ПолучитьВывод();
	
	Возврат КодВозврата = 0;
	
КонецФункции //СоздатьБазу()

Функция УстановитьВладельцаБазы(База, НовыйВладелец, ОписаниеРезультата = "") Экспорт

	Если НЕ БазаСуществует(База) Тогда
		ОписаниеРезультата = "База """ + База + """ не существует!";
		Возврат Ложь;
	КонецЕсли;

	ТекстЗапроса = """ALTER AUTHORIZATION ON DATABASE::" + База + " TO " + НовыйВладелец + """";
	
	КомандаРК = Новый Команда;
	
	КомандаРК.УстановитьКоманду("sqlcmd");
	КомандаРК.ДобавитьПараметр("-S " + Сервер);
	КомандаРК.ДобавитьПараметр("-U " + Пользователь);
	КомандаРК.ДобавитьПараметр("-P " + Пароль);
	КомандаРК.ДобавитьПараметр("-Q " + ТекстЗапроса);
	КомандаРК.ДобавитьПараметр("-b");

	КомандаРК.УстановитьИсполнениеЧерезКомандыСистемы( Ложь );
	КомандаРК.ПоказыватьВыводНемедленно( Ложь );
	
	КодВозврата = КомандаРК.Исполнить();

	ОписаниеРезультата = КомандаРК.ПолучитьВывод();
	
	Возврат КодВозврата = 0;
	
КонецФункции //УстановитьВладельцаБазы()

Функция СжатьБазу(База, ОписаниеРезультата = "") Экспорт

	Если НЕ БазаСуществует(База) Тогда
		ОписаниеРезультата = "База """ + База + """ не существует!";
		Возврат Ложь;
	КонецЕсли;

	ТекстЗапроса = """DBCC SHRINKDATABASE(N'" + База + "', 0)""";
	
	КомандаРК = Новый Команда;
	
	КомандаРК.УстановитьКоманду("sqlcmd");
	КомандаРК.ДобавитьПараметр("-S " + Сервер);
	КомандаРК.ДобавитьПараметр("-U " + Пользователь);
	КомандаРК.ДобавитьПараметр("-P " + Пароль);
	КомандаРК.ДобавитьПараметр("-Q " + ТекстЗапроса);
	КомандаРК.ДобавитьПараметр("-b");

	КомандаРК.УстановитьИсполнениеЧерезКомандыСистемы( Ложь );
	КомандаРК.ПоказыватьВыводНемедленно( Ложь );
	
	КодВозврата = КомандаРК.Исполнить();

	ОписаниеРезультата = КомандаРК.ПолучитьВывод();
	
	Возврат КодВозврата = 0;
	
КонецФункции //СжатьБазу()

Функция СоздатьРезервнуюКопию(База, ПутьКРезервнойКопии, ОписаниеРезультата = "") Экспорт
	
	Если НЕ БазаСуществует(База) Тогда
		ОписаниеРезультата = "База """ + База + """ не существует!";
		Возврат Ложь;
	КонецЕсли;

	ТекстЗапроса = """BACKUP DATABASE [" + База + "] TO  DISK = N'" + ПутьКРезервнойКопии
				 + "' WITH NOFORMAT, INIT,  NAME = N'" + База
				 + " FULL Backup', SKIP, NOREWIND, NOUNLOAD,COMPRESSION, STATS = 10""";
	
	КомандаРК = Новый Команда;
	
	КомандаРК.УстановитьКоманду("sqlcmd");
	КомандаРК.ДобавитьПараметр("-S " + Сервер);
	КомандаРК.ДобавитьПараметр("-U " + Пользователь);
	КомандаРК.ДобавитьПараметр("-P " + Пароль);
	КомандаРК.ДобавитьПараметр("-Q " + ТекстЗапроса);
	КомандаРК.ДобавитьПараметр("-b");

	КомандаРК.УстановитьИсполнениеЧерезКомандыСистемы( Ложь );
	КомандаРК.ПоказыватьВыводНемедленно( Ложь );
	
	КодВозврата = КомандаРК.Исполнить();

	ОписаниеРезультата = КомандаРК.ПолучитьВывод();
	
	Возврат КодВозврата = 0;
	
КонецФункции //СоздатьРезервнуюКопию()

Функция ВосстановитьИзРезервнойКопии(База
								   , СоздаватьБазу = Ложь
								   , НовыйВладелец = ""
								   , СжатьБазу = Истина
								   , ПутьКРезервнойКопии
								   , ИмяБазыВРезервнойКопии
								   , ПутьКФайлуДанных
								   , ПутьКФайлуЖурнала
								   , ОписаниеРезультата = "") Экспорт
	
	Если НЕ БазаСуществует(База) Тогда
		Если НЕ СоздаватьБазу Тогда
			ОписаниеРезультата = "База """ + База + """ не существует!";
			Возврат Ложь;
		Иначе
			Если НЕ СоздатьБазу(База, ОписаниеРезультата) Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	ТекстЗапроса = """USE [master]; "
				 + "ALTER DATABASE " + База + " SET SINGLE_USER WITH ROLLBACK IMMEDIATE; "
				 + "RESTORE DATABASE [" + База + "] FROM  DISK = N'" + ПутьКРезервнойКопии + "' WITH  FILE = 1, "
						+ "MOVE N'" + ИмяБазыВРезервнойКопии + "' TO N'" + ПутьКФайлуДанных + "\" + База + ".mdf', "
						+ "MOVE N'" + ИмяБазыВРезервнойКопии + "_log' TO N'" + ПутьКФайлуЖурнала + "\" + База + "_log.ldf',"
						+ "NOUNLOAD,  REPLACE,  STATS = 5; "
				 +"ALTER DATABASE " + База + " SET MULTI_USER""";
	
	КомандаРК = Новый Команда;
	
	КомандаРК.УстановитьКоманду("sqlcmd");
	КомандаРК.ДобавитьПараметр("-S " + Сервер);
	КомандаРК.ДобавитьПараметр("-U " + Пользователь);
	КомандаРК.ДобавитьПараметр("-P " + Пароль);
	КомандаРК.ДобавитьПараметр("-Q " + ТекстЗапроса);
	КомандаРК.ДобавитьПараметр("-b");

	КомандаРК.УстановитьИсполнениеЧерезКомандыСистемы( Ложь );
	КомандаРК.ПоказыватьВыводНемедленно( Ложь );
	
	КодВозврата = КомандаРК.Исполнить();

	ОписаниеРезультата = КомандаРК.ПолучитьВывод();
	
	Если ЗначениеЗаполнено(НовыйВладелец) Тогда
		УстановитьВладельцаБазы(База, НовыйВладелец);
	КонецЕсли;
	
	Если СжатьБазу Тогда
		СжатьБазу(База);
	КонецЕсли;
	
	Возврат КодВозврата = 0;

КонецФункции //ВосстановитьИзРезервнойКопии()

