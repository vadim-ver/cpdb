
///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Перем Лог;

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
	
	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "Создать резервную копию базы MS SQL");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-params",
		"Файлы JSON содержащие значения параметров,
		|могут быть указаны несколько файлов разделенные "";""
		|(параметры командной строки имеют более высокий приоритет)");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-sql-srvr",
		"Адрес сервера MS SQL");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-sql-user",
		"Пользователь сервера");
	
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-sql-pwd",
		"Пароль пользователя сервера");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-sql-db",
		"Имя базы для восстановления");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-bak-path",
		"Путь к резервной копии");

    Парсер.ДобавитьКоманду(ОписаниеКоманды);

КонецПроцедуры

Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт
    
	ЗапускПриложений.ПрочитатьПараметрыКомандыИзФайла(ПараметрыКоманды["-params"], ПараметрыКоманды);
	
	Сервер					= ПараметрыКоманды["-sql-srvr"];
	База					= ПараметрыКоманды["-sql-db"];
	Пользователь			= ПараметрыКоманды["-sql-user"];
	ПарольПользователя		= ПараметрыКоманды["-sql-pwd"];
	ПутьКРезервнойКопии		= ПараметрыКоманды["-bak-path"];

	ВозможныйРезультат = МенеджерКомандПриложения.РезультатыКоманд();

	Если ПустаяСтрока(Сервер) Тогда
		Лог.Ошибка("Не указан сервер MS SQL");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ПустаяСтрока(База) Тогда
		Лог.Ошибка("Не указана база для резервного копирования");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ПустаяСтрока(ПутьКРезервнойКопии) Тогда
		Лог.Ошибка("Не задан путь к резервной копии");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Инструменты = Новый ИнструментыСУБД;

	Инструменты.Инициализировать(Сервер, Пользователь, ПарольПользователя);
	
	ОписаниеРезультата = "";
	
	Попытка
		Инструменты.Инициализировать(Сервер, Пользователь, ПарольПользователя);
	
		Результат = Инструменты.СоздатьРезервнуюКопию(База, ПутьКРезервнойКопии, ОписаниеРезультата);

		Если Не ПустаяСтрока(ОписаниеРезультата) Тогда
			Лог.Информация(ОписаниеРезультата);
		КонецЕсли;
		
		Если Результат = 0 Тогда
			Возврат ВозможныйРезультат.ОшибкаВремениВыполнения;
		КонецЕсли;

		Возврат ВозможныйРезультат.Успех;
	Исключение
		Лог.Ошибка(ОписаниеРезультата);
		Возврат ВозможныйРезультат.ОшибкаВремениВыполнения;
	КонецПопытки;

КонецФункции

Лог = Логирование.ПолучитьЛог("ktb.app.cpdb");