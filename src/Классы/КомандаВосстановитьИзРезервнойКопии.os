
///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Перем Лог;

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
	
	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "Восстановить базу MS SQL из резервной копии");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-params",
		"Файлы JSON содержащие значения параметров,
		|могут быть указаны несколько файлов разделенные "";""
		|(параметры командной строки имеют более высокий приоритет)");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-sql-srvr",
		"Адрес сервера MS SQL");
	
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-sql-user",
		"Пользователь сервера");
		
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-sql-pwd",
		"Пароль пользователя сервера");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-sql-db",
		"Имя базы для восстановления");
	
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-bak-path",
		"Путь к резервной копии");

	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, 
		"-create-db",
		"Создать базу в случае отсутствия");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-db-owner",
		"Имя владельца базы после восстановления");

	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, 
		"-shrink-db",
		"Сжать базу после восстановления");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-db-bakname",
		"Имя базы в файле резервной копии");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-db-path",
		"Путь к каталогу файлов данных базы после восстановления");

	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, 
		"-db-logpath",
		"Путь к каталогу файлов журнала после восстановления");

	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, 
		"-delsource",
		"Удалить файл резервной копии после восстановления");

	Парсер.ДобавитьКоманду(ОписаниеКоманды);

КонецПроцедуры

Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт
    
	ЗапускПриложений.ПрочитатьПараметрыКомандыИзФайла(ПараметрыКоманды["-params"], ПараметрыКоманды);
	
	Сервер					= ПараметрыКоманды["-sql-srvr"];
	База					= ПараметрыКоманды["-sql-db"];
	Пользователь			= ПараметрыКоманды["-sql-user"];
	ПарольПользователя		= ПараметрыКоманды["-sql-pwd"];
	ПутьКРезервнойКопии		= ПараметрыКоманды["-bak-path"];
	СоздаватьБазу			= ПараметрыКоманды["-create-db"];
	ВладелецБазы			= ПараметрыКоманды["-db-owner"];
	СжатьБазу				= ПараметрыКоманды["-shrink-db"];
	ИмяБазыВРезервнойКопии	= ПараметрыКоманды["-db-bakname"];
	ПутьКФайлуДанных		= ПараметрыКоманды["-db-path"];
	ПутьКФайлуЖурнала		= ПараметрыКоманды["-db-logpath"];
	УдалитьИсточник			= ПараметрыКоманды["-delsource"];

	ВозможныйРезультат = МенеджерКомандПриложения.РезультатыКоманд();

	Если ПустаяСтрока(Сервер) Тогда
		Лог.Ошибка("Не указан сервер MS SQL");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ПустаяСтрока(База) Тогда
		Лог.Ошибка("Не указана база для резервного копирования");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ПустаяСтрока(ПутьКРезервнойКопии) Тогда
		Лог.Ошибка("Не задан путь к резервной копии");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ПустаяСтрока(ИмяБазыВРезервнойКопии) Тогда
		Лог.Ошибка("Не задано имя базы в резервной копии");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ПустаяСтрока(ПутьКФайлуДанных) Тогда
		Лог.Ошибка("Не задан путь к каталогу файлов данных");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Если ПустаяСтрока(ПутьКФайлуЖурнала) Тогда
		Лог.Ошибка("Не задан путь к каталогу файлов журнала");
		Возврат ВозможныйРезультат.НеверныеПараметры;
	КонецЕсли;

	Инструменты = Новый ИнструментыСУБД;

	Инструменты.Инициализировать(Сервер, Пользователь, ПарольПользователя);
	
	ОписаниеРезультата = "";
	
	Попытка
		Инструменты.Инициализировать(Сервер, Пользователь, ПарольПользователя);
	
		Результат = Инструменты.ВосстановитьИзРезервнойКопии(База
														   , СоздаватьБазу
														   , ВладелецБазы
														   , СжатьБазу
														   , ПутьКРезервнойКопии
														   , ИмяБазыВРезервнойКопии
														   , ПутьКФайлуДанных
														   , ПутьКФайлуЖурнала
														   , ОписаниеРезультата);

		Если Не ПустаяСтрока(ОписаниеРезультата) Тогда
			Лог.Информация(ОписаниеРезультата);
		КонецЕсли;
		
		Если Результат = 0 Тогда
			Возврат ВозможныйРезультат.ОшибкаВремениВыполнения;
		КонецЕсли;

		Если УдалитьИсточник Тогда
			УдалитьФайлы(ПутьКРезервнойКопии);
			Лог.Информация(СтрШаблон("Исходный файл %1 удален", ПутьКРезервнойКопии));
		КонецЕсли;
		
		Возврат ВозможныйРезультат.Успех;
	Исключение
		Лог.Ошибка(ОписаниеРезультата);
		Возврат ВозможныйРезультат.ОшибкаВремениВыполнения;
	КонецПопытки;

КонецФункции

Лог = Логирование.ПолучитьЛог("ktb.app.cpdb");